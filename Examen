%@author: 
%    Tania lizbeth Oria trejo 14590555
%    Efrain Garcia Garcia     15590287
% Desarrollo una gramatica bnf (como la del video) para validar una 
% direccion ipv4 asi como una mascara de red.
% https://es.wikipedia.org/wiki/M%C3%A1scara_de_red#Tabla_de_m%C3%A1scaras_de_red
% Realice la implementacion de dicha gramatica en prolog donde
% se pueda validar la cadena donde esta esa ip o mascara ejemplo

ip("192.168.1.1").
true.
ip("256.168.1.1").
false.
maskR("255.255.255.0").
true.
maskR("255.255.255.1").
false.

atom_lstring([], []).
atom_lstring([L|C],R) :- atom_lstring(C,S), atom_string(L,SF), append([SF],S,R).
p_string(Term, LS) :-
		atom(Term),
		atom_string(Term,Str),
		p_string(Str,LS).

p_string(Str,LS) :-
		string(Str),
		string_chars(Str,LAC),
		atom_lstring(LAC, LS).


mask(N) :-
		N ==  "128"; N == "192"; N == "224";
		N == "240"; N == "248"; N == "252";
		N == "254"; N == "255".

mask1(N) :-    N == "0".

digito_ip(N) :-
		N == "0"; N == "1"; N == "2";
		N == "3"; N == "4"; N == "5";
		N == "6"; N == "7"; N == "8"; N == "9".

s_mask([L|[]]) :- mask1(L).
s_mask([L|C]) :- mask1(L), s_mask(C).

s_mask([L|[]]) :-
		mask(L);
		 mask1(L).


s_mask([L|C]) :-
		 mask(L), s_mask(C);
		 mask1(L), s_mask(C).
		

dirIp([B|[]]) :- dig_ip(B).
dirIp([B|C]) :- dig_ip(B),dirIp(C).

div_ip([L|[]]) :-  num_cod(N, L), N < 256, p_string(L,LS), dirIp(LS).

div_ip([L|A]) :- num_cod(N, L), N < 256, p_string(L,LS),dirIp(LS), div_ip(A).

ip(IP) :- split_string(IP, ".", ".", D), div_ip(D).
maskR(M) :- split_string(M, ".", ",", Z), s_mask(Z).
